{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","apiService.js","Components/ImageGallery/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchText","setSearchText","className","e","preventDefault","trim","toast","info","type","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","ImageGalleryItem","id","webformatURL","onClick","src","alt","API","searchQuery","nomberPage","a","fetch","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","keyDowmModal","code","props","onClose","onList","clickFoOverlay","target","window","addEventListener","this","removeEventListener","createPortal","children","Component","ImageGallery","rezultSearch","setRezultSearch","status","setStatus","showModal","setShowModal","activeImgIndex","setActiveImgIndex","pageNomber","setPageNomber","error","setError","toggleModal","prevState","showImage","data","i","map","String","indexOf","useEffect","then","rez","hits","length","catch","message","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","key","largeImageURL","App","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98b7fd82.chunk.js","sourcesContent":["import  { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n    const [searchText, setSearchText] = useState('');\r\n   const inputChange = e => {\r\n       const { value } = e.currentTarget;\r\n        setSearchText(value);  \r\n    };\r\n    const formSabmit = e => {\r\n        e.preventDefault();\r\n        if (searchText.trim() === '') {\r\n            toast.info('Введите цель поиска!');\r\n            return;\r\n        }\r\n        onSubmit(searchText.trim());\r\n        setSearchText('');\r\n  }\r\n    return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={ formSabmit }>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                  <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                 <input\r\n                  name=\"searchText\"\r\n                  className=\"SearchForm-input\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  autoFocus\r\n                  placeholder=\"Поиск изображений и фотографий\"\r\n                  value={searchText}\r\n                  onChange={inputChange}  \r\n                />\r\n             </form>\r\n            </header>\r\n        );\r\n};\r\n","export default function ImageGalleryItem({ id, webformatURL, onClick }) {\r\n   return (\r\n            <li  className=\"ImageGalleryItem\">\r\n               <img src={webformatURL} id={id} alt=\"\" className=\"ImageGalleryItem-image\" onClick={onClick}/>\r\n            </li>\r\n   )\r\n};\r\n","const BASE_URL = \"https://pixabay.com/api\";\r\nconst KEY = \"21855327-aca65fff95f12487eb72f2b8c\";\r\n\r\nconst API = async function (searchQuery, nomberPage) {\r\n    const response = await fetch(`${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${nomberPage}&per_page=12&key=${KEY}`);\r\n    if (response.ok) { return response.json(); }\r\n    return await Promise.reject(new Error(`Нет изображений по запросу '${searchQuery}'`));\r\n}\r\nexport default API;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nclass Modal extends Component {\r\n    \r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.keyDowmModal);\r\n    };\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.keyDowmModal);\r\n    };\r\n    keyDowmModal = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n        if (e.code === 'ArrowLeft') {\r\n            this.props.onList(-1);\r\n        }\r\n        if (e.code === 'ArrowRight') {\r\n            this.props.onList(+1);\r\n        }\r\n    };\r\n    clickFoOverlay = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.clickFoOverlay}>\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            ,\r\n            modalRoot\r\n        );\r\n    }\r\n}\r\n\r\n Modal.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    onList: PropTypes.func\r\n};\r\n\r\nexport default Modal;\r\n","import  { useState , useEffect } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport API from '../../apiService';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Modal from './Modal';\r\n\r\nexport default function ImageGallery({searchText}) {\r\n    const [rezultSearch, setRezultSearch] = useState([]);\r\n    const [status,setStatus] = useState('idle');\r\n    const [showModal,setShowModal] = useState(false);\r\n    const [activeImgIndex, setActiveImgIndex] = useState(null);\r\n    const [pageNomber, setPageNomber] = useState(0);\r\n    const [error, setError] = useState(null);\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(prevState => !prevState);\r\n    };\r\n    const loadMore = e => {\r\n        e.preventDefault();   \r\n        API(searchText, pageNomber + 1)\r\n            .then(rez => {\r\n                setRezultSearch(prevState => ([...prevState, ...rez.hits]));\r\n                setPageNomber(prevState => prevState +1);\r\n            });\r\n    };\r\n    const showImage = data => {\r\n        const id = data.target.id;\r\n        const imagesId = rezultSearch.map(e => String(e.id));\r\n        const i = imagesId.indexOf(id);\r\n        setActiveImgIndex(i);\r\n        toggleModal();\r\n    };\r\n    const listImgModal = key => {\r\n        let i = activeImgIndex;\r\n        i += key;\r\n        if (i < 0) { i = rezultSearch.length-1; }\r\n        if (i === rezultSearch.length) { i = 0;}\r\n        setActiveImgIndex(i);\r\n    };\r\n    useEffect(() => {\r\n        if (searchText === '') { return; }\r\n\r\n        setStatus('pending');\r\n                \r\n        API(searchText, 1)\r\n                .then(rez => {\r\n                    if (rez.hits.length) {\r\n                        setRezultSearch(rez.hits);\r\n                        setStatus('resolved');\r\n                        setPageNomber(1);\r\n                    }\r\n                    else {\r\n                        setError(`Нет изображений по запросу \"${searchText}\"`);\r\n                        setStatus('rejected');\r\n                    }\r\n                })\r\n            .catch(error => {\r\n                setError(error.message);\r\n                setStatus('rejected');\r\n            });\r\n    }, [searchText]);\r\n    useEffect(() => {\r\n        if (pageNomber === 1) { return;}\r\n         window.scrollTo({\r\n               top: document.documentElement.scrollHeight,\r\n               behavior: 'smooth',\r\n            });\r\n    }, [pageNomber]);\r\n\r\n    if (status === \"idle\") {\r\n            return <div></div>;\r\n        }\r\n    if (status === \"pending\") {\r\n            return (\r\n                <div className=\"conteinGallery\">\r\n                    <Loader\r\n                     type=\"ThreeDots\"\r\n                     color=\"#3f51b5\"\r\n                     height={100}\r\n                     width={100}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    if (status === \"rejected\") {\r\n            return (<div className=\"conteinGallery\">\r\n                      <h1>{error}</h1>;    \r\n                    </div>);\r\n        }\r\n    if (status === \"resolved\") {\r\n            return (\r\n              <div className=\"conteinGallery\">\r\n                    <ul className=\"ImageGallery\">\r\n                        {rezultSearch.map(({ id, webformatURL }) => { return <ImageGalleryItem key={id} webformatURL={webformatURL} id={id} onClick={showImage}/>})}\r\n                </ul>\r\n                <button className=\"Button\" onClick={loadMore}>Загрузить еще</button>\r\n                    {showModal && <Modal onClose={toggleModal} onList={listImgModal}><img src={ rezultSearch[activeImgIndex].largeImageURL} alt=\"\" /></Modal>}\r\n                </div>\r\n            );\r\n        }\r\n};","import {useState} from 'react';\nimport './App.css';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const [searchText, setSearchText] = useState('');\n  \n     return (\n      <div className=\"App\">\n         <Searchbar onSubmit={setSearchText} />\n         <ToastContainer\n           autoClose={3000}\n           position=\"top-center\"\n          />\n         <ImageGallery searchText={searchText} />\n      </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}